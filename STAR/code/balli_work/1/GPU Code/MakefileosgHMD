
EXEC = hmdPlume

CC = g++ -g -O2 -Wall -DNDEBUG
CSRC 	= hmdPlume.cpp framebufferObject.cpp renderbuffer.cpp GLSL.cpp glErrorUtil.cpp particleControl.cpp displayControl.cpp Timer.cpp particleEmitter.cpp pointEmitter.cpp sphereEmitter.cpp plumeControl.cpp collectionBox.cpp util.cpp simulation.cpp streamLine.cpp Random.cpp Gaussian_2shaders_Model.cpp GaussianModel.cpp nonGaussianModel.cpp ReflectionModel.cpp
COBJS   = $(CSRC:.cpp=.o)

HEADERS = framebufferObject.h renderbuffer.h GLSL.h glErrorUtil.h particleControl.h displayControl.h Timer.h particleEmitter.h pointEmitter.h sphereEmitter.h plumeControl.h collectionBox.h util.h simulation.h emitterTransform.h


PLUME_DIR = Modular_QUICPLUME
FSRCS =	$(PLUME_DIR)/DataModule.f90 $(PLUME_DIR)/ReadFiles.f90
FOBJS =  $(FSRCS:.f90=.o)
FOBJSS = DataModule.o ReadFiles.o

INCLUDE_PATH =  -I/home/cs/vr/software/osg-1.2.dist/include -I/home/cs/vr/software/glew-1.3.4.dist/include -I/home/cs/vr/software/vrend_041607.dist/include
LIB_PATH =   -L/home/cs/vr/software/osg-1.2.dist/lib -L/home/cs/vr/software/glew-1.3.4.dist/lib -L/home/cs/vr/software/vrend_041607.dist/lib  -Wl,-rpath=/home/cs/vr/software/osg-1.2.dist.lib -Wl,-rpath=/home/cs/vr/software/glew-1.3.4.dist/lib -Wl,-rpath=/home/cs/vr/software/vrend_041607.dist/lib

LIB = -lvrend -lisense -losg -losgProducer -losgUtil -lProducer -lOpenThreads -losgGA -losgDB -losgText -Wl,-rpath=/home/cs/vr/software/glew-1.3.4.dist/lib -lGLEW -lglut -lGL

# compile with gfortran
FCLOC	= /usr
FC	= $(FCLOC)/bin/gfortran
FCFLAGS	= -O3 -fdefault-double-8 -fdefault-real-8 -fdefault-integer-8 -ffree-form -ftree-vectorize

FLAGS = $(INCLUDE_PATH) $(LIB_PATH) $(LIB)

$(EXEC): $(COBJS) $(FOBJS) $(HEADERS)
	$(CC) -o $(EXEC) $(COBJS) $(FOBJSS) $(FLAGS) -L$(FLOC)/lib -lgfortran

%.o : %.cpp
	$(CC) -c $(INCLUDE_PATH) $<

%.o : %.f90
	$(FC) $(FCFLAGS) -c $<

clean:
	rm -f $(EXEC) *.o

include /home/cs/vr/software/vrend_041607.dist/share/Makefile.common